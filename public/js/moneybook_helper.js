// Generated by CoffeeScript 1.4.0
(function() {
  var _this = this;

  window.roundNumber = function(num, dec) {
    return Math.round(num * Math.pow(10, dec)) / Math.pow(10, dec);
  };

  window.rn = function(num) {
    return roundNumber(num, 2);
  };

  window.drawChart = function(mb, divId) {
    var chart, data, index, options, value, _fn, _ref;
    data = new google.visualization.DataTable();
    data.addColumn('string', 'Person');
    data.addColumn('number', 'receives');
    _ref = mb.evn.people;
    _fn = function() {
      return data.addRows([[value.name, value.balance]]);
    };
    for (index in _ref) {
      value = _ref[index];
      _fn();
    }
    options = {
      titlePosition: 'none',
      title: "asdf",
      backgroundColor: '9f00a7',
      colors: ['white'],
      hAxis: {
        textPosition: 'none'
      },
      width: 190,
      height: 220,
      legend: 'none'
    };
    chart = new google.visualization.BarChart(document.getElementById(divId));
    return chart.draw(data, options);
  };

  window.drawChartsByDay = function(mb, divId) {
    var balance, data, date, day, formatter, name, options, table, vv, _fn, _ref, _ref1, _results,
      _this = this;
    _ref = mb.evn.days;
    _results = [];
    for (day in _ref) {
      vv = _ref[day];
      $("#" + divId).append("<div id='chart_div_" + day + "'></div>");
      data = new google.visualization.DataTable();
      data.addColumn('string', 'Person');
      date = new Date(parseInt(day));
      data.addColumn('number', date.format("dd mmm yyyy"));
      data.addColumn('number', 'Balance');
      _ref1 = mb.evn.days[day].today;
      _fn = function() {
        var tot;
        tot = mb.evn.days[day].balance[name];
        return data.addRows([[name, rn(balance), rn(tot)]]);
      };
      for (name in _ref1) {
        balance = _ref1[name];
        _fn();
      }
      options = {
        'title': 'day: ' + day.toString(),
        'width': 280,
        'height': 300
      };
      table = new google.visualization.Table(document.getElementById('chart_div_' + day));
      formatter = new google.visualization.BarFormat({
        width: 80
      });
      formatter.format(data, 1);
      _results.push(table.draw(data, {
        allowHtml: true,
        showRowNumber: true
      }));
    }
    return _results;
  };

  window.drawChartsByLine = function(mb, divId) {
    var ben, data, formatter, line, line_n, options, payr, table, _fn, _fn1, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2, _results,
      _this = this;
    line_n = 0;
    _ref = mb.evn.lines;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      line = _ref[_i];
      if (line.isComment) {
        _results.push($("#" + divId).append("<span style='color:red'>" + line.string + "</span><br/>"));
      } else if (line.isCommand) {
        _results.push($("#" + divId).append("<span style='color:blue'>" + line.string + "</span><br/>"));
      } else {
        $("#" + divId).append(("" + line.string + "<br/><div id='chart_div_line_") + line_n + "'></div>");
        data = new google.visualization.DataTable();
        data.addColumn('string', 'Person');
        data.addColumn('number', "Owes");
        data.addColumn('number', "Paid");
        data.addColumn('number', "Diff");
        data.addColumn('number', 'Balance');
        _ref1 = line.bens;
        _fn = function() {
          var amountPaid;
          amountPaid = line.getPayrByPerson(ben.person) != null ? roundNumber(line.getPayrByPerson(ben.person).amount, 2) : 0;
          return data.addRows([[ben.person.name, roundNumber(ben.owes, 2), amountPaid, roundNumber(amountPaid - ben.owes, 2), rn(ben.balance)]]);
        };
        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
          ben = _ref1[_j];
          _fn();
        }
        _ref2 = line.payrs;
        _fn1 = function() {
          if (!line.personIsBen(payr.person)) {
            return data.addRows([[payr.person.name, 0, roundNumber(payr.amount, 2), roundNumber(payr.amount, 2), rn(payr.balance)]]);
          }
        };
        for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
          payr = _ref2[_k];
          _fn1();
        }
        options = {
          'title': line.string,
          'width': 280,
          'height': 300
        };
        table = new google.visualization.Table(document.getElementById('chart_div_line_' + line_n));
        formatter = new google.visualization.BarFormat({
          width: 80
        });
        formatter.format(data, 1);
        formatter.format(data, 2);
        formatter.format(data, 3);
        formatter.format(data, 4);
        table.draw(data, {
          allowHtml: true,
          showRowNumber: true
        });
        _results.push(line_n += 1);
      }
    }
    return _results;
  };

}).call(this);
